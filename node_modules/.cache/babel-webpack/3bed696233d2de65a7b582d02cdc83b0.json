{"ast":null,"code":"import _asyncToGenerator from \"/Users/homero/fereg-call/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { forkJoin } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"ngx-agora-sdk-ng\";\nimport * as i3 from \"../../shared/services/media.service\";\nimport * as i4 from \"../../shared/services/token.service\";\nimport * as i5 from \"../../shared/components/meeting-controls/meeting-controls.component\";\nconst _c0 = [\"localVideo\"];\nexport let MeetingPageComponent = /*@__PURE__*/(() => {\n  class MeetingPageComponent {\n    constructor(activatedRoute, agoraService, mediaService, tokenService, router) {\n      this.activatedRoute = activatedRoute;\n      this.agoraService = agoraService;\n      this.mediaService = mediaService;\n      this.tokenService = tokenService;\n      this.router = router;\n      this.link = '';\n      this.channel = '';\n      this.subscriptions = [];\n      this.userList = [];\n      this.audioInId = '';\n      this.videoInId = '';\n      this.audioOutId = '';\n      this.token = '';\n    }\n\n    ngOnInit() {\n      forkJoin([this.activatedRoute.queryParams.pipe(take(1)), this.mediaService.selectedAudioInputId.pipe(take(1)), this.mediaService.selectedAudioOutputId.pipe(take(1)), this.mediaService.selectedVideoInputId.pipe(take(1))]).pipe(take(1)).subscribe(([params, aInId, aOutId, vInId]) => {\n        this.link = params.link;\n        this.channel = params.channel;\n\n        if (this.link) {\n          const result = this.tokenService.getChannel(this.link);\n\n          if (result.error) {\n            alert(result.error);\n            this.router.navigate(['/..']);\n            return;\n          }\n\n          this.channel = result.channel;\n        }\n\n        this.tokenService.getToken(this.channel);\n        this.audioInId = aInId;\n        this.videoInId = vInId;\n        this.audioOutId = aOutId;\n      });\n      const tokenSub = this.tokenService.token.pipe(take(1)).subscribe(token => {\n        this.token = token;\n        this.joinVideo();\n      });\n      this.subscriptions.push(tokenSub);\n      const remoteUserLeaveSubs = this.agoraService.onRemoteUserLeft().subscribe(leftuser => {\n        var _a;\n\n        this.userList = this.userList.filter(user => {\n          var _a;\n\n          return ((_a = user.user) === null || _a === void 0 ? void 0 : _a.uid) !== leftuser.user.uid;\n        });\n\n        if (this.pinnedUser && ((_a = this.pinnedUser.user) === null || _a === void 0 ? void 0 : _a.uid) && this.pinnedUser.user.uid === leftuser.user.uid) {\n          this.pinnedUser = null;\n        }\n      });\n      this.subscriptions.push(remoteUserLeaveSubs);\n      const remoteUserChangeSubs = this.agoraService.onRemoteUsersStatusChange().subscribe(status => {\n        var _a;\n\n        switch (status.connectionState) {\n          case 'CONNECTED':\n            if (!this.userList.find(user => {\n              var _a;\n\n              return ((_a = user.user) === null || _a === void 0 ? void 0 : _a.uid) === status.user.uid;\n            })) {\n              this.userList.push({\n                type: 'remote',\n                user: status.user\n              });\n            }\n\n            break;\n\n          case 'DISCONNECTED':\n          case 'DISCONNECTING':\n          case 'RECONNECTING':\n            const currentUserIndex = this.userList.findIndex(user => {\n              var _a;\n\n              return ((_a = user.user) === null || _a === void 0 ? void 0 : _a.uid) === status.user.uid;\n            });\n\n            if (currentUserIndex >= 0) {\n              this.userList[currentUserIndex] = {\n                type: 'remote',\n                user: status.user\n              };\n\n              if (this.pinnedUser && ((_a = this.pinnedUser.user) === null || _a === void 0 ? void 0 : _a.uid) && this.pinnedUser.user.uid === status.user.uid) {\n                this.pinnedUser = {\n                  type: 'remote',\n                  user: status.user\n                };\n              }\n            }\n\n            break;\n        }\n      });\n      this.subscriptions.push(remoteUserChangeSubs);\n      const localUserJoinedSubs = this.agoraService.onLocalUserJoined().subscribe(track => {\n        this.userList.push({\n          type: 'local',\n          mediaTrack: track.track\n        });\n      });\n      this.subscriptions.push(localUserJoinedSubs);\n    }\n\n    ngOnDestroy() {\n      for (const sub of this.subscriptions) {\n        sub.unsubscribe();\n      }\n    }\n\n    joinVideo() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        _this.mediaTrack = yield _this.agoraService.joinAudio(_this.channel, _this.token).Apply();\n      })();\n    }\n\n    onLocalMic(value) {\n      var _a, _b;\n\n      !value ? (_a = this.mediaTrack) === null || _a === void 0 ? void 0 : _a.microphoneUnMute() : (_b = this.mediaTrack) === null || _b === void 0 ? void 0 : _b.microphoneMute();\n    }\n\n    onLocalPinned(value) {\n      const localuser = this.userList.find(user => user.type === 'local');\n\n      if (localuser) {\n        this.onPin(localuser);\n      }\n    }\n\n    onLocalLeave() {\n      var _a;\n\n      this.agoraService.leave();\n      (_a = this.mediaTrack) === null || _a === void 0 ? void 0 : _a.stop();\n      this.router.navigate(['/..']);\n    }\n\n    onPin(user) {\n      var _a, _b, _c, _d, _e;\n\n      if (user.type === 'local') {\n        if (this.pinnedUser && ((_a = this.pinnedUser) === null || _a === void 0 ? void 0 : _a.type) === 'local') {\n          this.pinnedUser = null;\n          return;\n        }\n\n        this.pinnedUser = user;\n        return;\n      }\n\n      if (((_b = this.pinnedUser) === null || _b === void 0 ? void 0 : _b.type) === 'local') {\n        this.pinnedUser = user;\n        return;\n      }\n\n      if (((_d = (_c = this.pinnedUser) === null || _c === void 0 ? void 0 : _c.user) === null || _d === void 0 ? void 0 : _d.uid) === ((_e = user.user) === null || _e === void 0 ? void 0 : _e.uid)) {\n        this.pinnedUser = null;\n      } else {\n        this.pinnedUser = user;\n      }\n    }\n\n    getUnpinnedUsers() {\n      var _a;\n\n      if (((_a = this.pinnedUser) === null || _a === void 0 ? void 0 : _a.type) === 'local') {\n        return this.userList.filter(user => user.type !== 'local');\n      }\n\n      return this.userList.filter(user => {\n        var _a, _b, _c;\n\n        return ((_a = user.user) === null || _a === void 0 ? void 0 : _a.uid) !== ((_c = (_b = this.pinnedUser) === null || _b === void 0 ? void 0 : _b.user) === null || _c === void 0 ? void 0 : _c.uid);\n      });\n    }\n\n  }\n\n  MeetingPageComponent.ɵfac = function MeetingPageComponent_Factory(t) {\n    return new (t || MeetingPageComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.NgxAgoraSdkNgService), i0.ɵɵdirectiveInject(i3.MediaService), i0.ɵɵdirectiveInject(i4.TokenService), i0.ɵɵdirectiveInject(i1.Router));\n  };\n\n  MeetingPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MeetingPageComponent,\n    selectors: [[\"app-meeting-page\"]],\n    viewQuery: function MeetingPageComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.localVideo = _t.first);\n      }\n    },\n    decls: 5,\n    vars: 0,\n    consts: [[1, \"page\"], [1, \"image\"], [\"src\", \"../../../assets/images/logoFereg.png\", \"height\", \"70%\", \"width\", \"70%\", 1, \"images\"], [1, \"controls-container\"], [3, \"micMuted\", \"hangedUp\"]],\n    template: function MeetingPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelement(2, \"img\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"app-meeting-controls\", 4);\n        i0.ɵɵlistener(\"micMuted\", function MeetingPageComponent_Template_app_meeting_controls_micMuted_4_listener($event) {\n          return ctx.onLocalMic($event);\n        })(\"hangedUp\", function MeetingPageComponent_Template_app_meeting_controls_hangedUp_4_listener() {\n          return ctx.onLocalLeave();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n    },\n    directives: [i5.MeetingControlsComponent],\n    styles: [\".page[_ngcontent-%COMP%]{min-width:100%;min-height:100%;display:grid;width:100%;grid-template-rows:90% 10%}.image[_ngcontent-%COMP%]{text-align:center;align-self:center}\"]\n  });\n  return MeetingPageComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}