{"ast":null,"code":"import _asyncToGenerator from \"/Users/homero/fereg-call/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { forkJoin } from 'rxjs';\nimport { take } from 'rxjs/operators';\nlet MeetingPreviewComponent = class MeetingPreviewComponent {\n  constructor(formBuilder, router, tokeService, firestore, activatedRoute) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.tokeService = tokeService;\n    this.firestore = firestore;\n    this.activatedRoute = activatedRoute;\n    this.channel = '';\n    this.condominium = '';\n    this.showSettings = false;\n    this.joinLoading = false;\n    this.newLoading = false;\n    this.subscriptions = [];\n    this.houses = [];\n    this.residents = [];\n    this.seleccionada = this.houses[0].houseNumber;\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b;\n\n      forkJoin([_this.activatedRoute.queryParams.pipe(take(1))]).pipe(take(1)).subscribe(([params]) => {\n        _this.condominium = params.condominium;\n      });\n      let residentsArray = [];\n      let housesArray = [];\n      yield _this.firestore.collection(\"condominium\").doc(`${_this.condominium}`).collection('resident').valueChanges().subscribe(items => items.map(item => {\n        residentsArray.push(item);\n        housesArray.push({\n          houseNumber: item.houseNumber,\n          residentNumber: item.residentNumber\n        });\n      }));\n      _this.houses = housesArray;\n      _this.residents = residentsArray;\n      _this.connectionInfoForm = _this.formBuilder.group({\n        channel: '',\n        link: ''\n      });\n      const channelChangeSubs = (_a = _this.connectionInfoForm.get('channel')) === null || _a === void 0 ? void 0 : _a.valueChanges.subscribe(value => {\n        var _a, _b, _c, _d;\n\n        if (value === '') {\n          (_b = (_a = _this.connectionInfoForm) === null || _a === void 0 ? void 0 : _a.get('link')) === null || _b === void 0 ? void 0 : _b.enable({\n            emitEvent: false\n          });\n        } else {\n          (_d = (_c = _this.connectionInfoForm) === null || _c === void 0 ? void 0 : _c.get('link')) === null || _d === void 0 ? void 0 : _d.disable({\n            emitEvent: false\n          });\n        }\n      });\n\n      _this.subscriptions.push(channelChangeSubs);\n\n      const linkChangeSubs = (_b = _this.connectionInfoForm.get('link')) === null || _b === void 0 ? void 0 : _b.valueChanges.subscribe(value => {\n        var _a, _b, _c, _d;\n\n        if (value === '') {\n          (_b = (_a = _this.connectionInfoForm) === null || _a === void 0 ? void 0 : _a.get('channel')) === null || _b === void 0 ? void 0 : _b.enable({\n            emitEvent: false\n          });\n        } else {\n          (_d = (_c = _this.connectionInfoForm) === null || _c === void 0 ? void 0 : _c.get('channel')) === null || _d === void 0 ? void 0 : _d.disable({\n            emitEvent: false\n          });\n        }\n      });\n\n      _this.subscriptions.push(linkChangeSubs);\n    })();\n  }\n\n  operar() {\n    console.log(this.seleccionada);\n  }\n\n  selectHouse(event) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      console.log(event.target.value); // var filtered = this.residents.filter(function(resident) {\n      //   return resident.residentNum === toFind;\n      // });\n      // let user = await this.firestore.collection(\"user\", ref => ref.where('residentNum', '==', this.expenseId)).valueChanges();\n      // console.log(user)\n\n      _this2.channel = event.target.value;\n    })();\n  }\n\n  ngOnDestroy() {\n    for (const subs of this.subscriptions) {\n      subs.unsubscribe();\n    }\n  }\n\n  onShowSettings() {\n    this.showSettings = true;\n  }\n\n  onCloseSettings() {\n    this.showSettings = false;\n  }\n\n  onJoinMeeting() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      console.log('calling');\n      let channel = _this3.channel;\n      let link = ''; // const { channel, link } = this.connectionInfoForm?.value;\n\n      if (_this3.channel) {\n        const message = {\n          to: 'ExponentPushToken[6CVGlsCRjGituFlhH7tCiv]',\n          sound: 'default',\n          title: 'Fereg SR',\n          body: 'Tienes una llamada entrante.',\n          data: {\n            someData: 'goes here'\n          }\n        };\n        yield fetch('https://exp.host/--/api/v2/push/send', {\n          method: 'POST',\n          headers: {\n            Accept: 'application/json',\n            'Accept-encoding': 'gzip, deflate',\n            'Content-Type': 'application/json'\n          },\n          mode: 'no-cors',\n          body: JSON.stringify(message)\n        });\n\n        const joinLink = _this3.tokeService.getLink(_this3.channel);\n\n        link = joinLink;\n        alert(`You can Invite other people using the link: ${joinLink}`);\n      }\n\n      _this3.router.navigate(['/meeting'], {\n        queryParams: {\n          channel,\n          link\n        }\n      });\n    })();\n  }\n\n};\nMeetingPreviewComponent = __decorate([Component({\n  selector: 'app-meeting-preview',\n  templateUrl: './meeting-preview.component.html',\n  styleUrls: ['./meeting-preview.component.scss'],\n  styles: []\n})], MeetingPreviewComponent);\nexport { MeetingPreviewComponent };","map":{"version":3,"sources":["/Users/homero/fereg-call/src/app/pages/meeting-preview/meeting-preview.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { forkJoin, Subscription } from 'rxjs';\nimport { TokenService } from '../../shared/services/token.service';\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-meeting-preview',\n  templateUrl: './meeting-preview.component.html',\n  styleUrls: ['./meeting-preview.component.scss']\n})\nexport class MeetingPreviewComponent implements OnInit, OnDestroy {\n  channel = '';\n  condominium = '';\n  showSettings = false;\n  joinLoading = false;\n  newLoading = false;\n  connectionInfoForm!: FormGroup;\n  subscriptions: Subscription[] = [];\n  houses: any[] = [];\n  residents: any[] = [];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private tokeService: TokenService,\n    private firestore: AngularFirestore,\n    private activatedRoute: ActivatedRoute,\n  ) { }\n\n  async ngOnInit(): Promise<void> {\n    forkJoin([\n      this.activatedRoute.queryParams.pipe(take(1)),\n    ])\n      .pipe(\n        take(1),\n      ).subscribe(([params]) => {\n        this.condominium = params.condominium;\n      });\n    let residentsArray: any[] = [];\n    let housesArray: any[] = [];\n    await this.firestore.collection(\"condominium\").doc(`${this.condominium}`).collection('resident')\n      .valueChanges()\n      .subscribe((items) => items.map(item => {\n        residentsArray.push(item);\n        housesArray.push({\n          houseNumber: item.houseNumber,\n          residentNumber: item.residentNumber\n        });\n      }));\n    \n      this.houses = housesArray;   \n      this.residents = residentsArray; \n\n    this.connectionInfoForm = this.formBuilder.group({\n      channel: '',\n      link: '',\n    });\n\n    const channelChangeSubs = this.connectionInfoForm.get('channel')?.valueChanges.subscribe(value => {\n      if (value === '') {\n        this.connectionInfoForm?.get('link')?.enable({ emitEvent: false });\n      }\n      else {\n        this.connectionInfoForm?.get('link')?.disable({ emitEvent: false });\n      }\n    });\n\n    this.subscriptions.push(channelChangeSubs as Subscription);\n\n    const linkChangeSubs = this.connectionInfoForm.get('link')?.valueChanges.subscribe(value => {\n      if (value === '') {\n        this.connectionInfoForm?.get('channel')?.enable({ emitEvent: false });\n      }\n      else {\n        this.connectionInfoForm?.get('channel')?.disable({ emitEvent: false });\n      }\n    });\n    this.subscriptions.push(linkChangeSubs as Subscription);\n  }\n\n  seleccionada: string = this.houses[0].houseNumber;\n\n  operar() {\n    console.log(this.seleccionada)\n  }\n\n  async selectHouse(event: any) {\n    console.log(event.target.value)\n    // var filtered = this.residents.filter(function(resident) {\n    //   return resident.residentNum === toFind;\n    // });\n    // let user = await this.firestore.collection(\"user\", ref => ref.where('residentNum', '==', this.expenseId)).valueChanges();\n    // console.log(user)\n    this.channel = event.target.value;\n }\n\n  ngOnDestroy(): void {\n    for (const subs of this.subscriptions) {\n      subs.unsubscribe();\n    }\n  }\n\n  onShowSettings(): void {\n    this.showSettings = true;\n  }\n\n  onCloseSettings(): void {\n    this.showSettings = false;\n  }\n\n  async onJoinMeeting(): Promise<void> {\n    console.log('calling')\n    let channel = this.channel;\n    let link = '';\n    // const { channel, link } = this.connectionInfoForm?.value;\n    if (this.channel) {\n      const message = {\n        to: 'ExponentPushToken[6CVGlsCRjGituFlhH7tCiv]',\n        sound: 'default',\n        title: 'Fereg SR',\n        body: 'Tienes una llamada entrante.',\n        data: { someData: 'goes here' },\n      };\n    \n      await fetch('https://exp.host/--/api/v2/push/send', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Accept-encoding': 'gzip, deflate',\n          'Content-Type': 'application/json',\n        },\n        mode: 'no-cors',\n        body: JSON.stringify(message),\n      });\n      const joinLink = this.tokeService.getLink(this.channel);\n      link = joinLink;\n      alert(`You can Invite other people using the link: ${joinLink}`);\n    }\n    this.router.navigate(['/meeting'], { queryParams: { channel, link } });\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}