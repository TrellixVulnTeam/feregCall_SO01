{"ast":null,"code":"import _asyncToGenerator from \"/Users/homero/fereg-call/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { BehaviorSubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-agora-sdk-ng\";\nexport var MediaStreamType = /*@__PURE__*/function (MediaStreamType) {\n  MediaStreamType[MediaStreamType[\"audio\"] = 0] = \"audio\";\n  MediaStreamType[MediaStreamType[\"video\"] = 1] = \"video\";\n  MediaStreamType[MediaStreamType[\"all\"] = 2] = \"all\";\n  return MediaStreamType;\n}({});\n;\nexport let MediaService = /*@__PURE__*/(() => {\n  class MediaService {\n    constructor(agoraService) {\n      this.agoraService = agoraService;\n      this.mediaDevicesInfos = [];\n      this.selectedAudioOutputId = new BehaviorSubject('');\n      this.selectedVideoInputId = new BehaviorSubject('');\n      this.selectedAudioInputId = new BehaviorSubject('');\n    }\n\n    set audioInputId(id) {\n      this.selectedAudioInputId.next(id);\n    }\n\n    set audioOutputId(id) {\n      this.selectedAudioOutputId.next(id);\n    }\n\n    set videoInputId(id) {\n      this.selectedVideoInputId.next(id);\n    }\n\n    getMediaSources(kind) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        try {\n          //await navigator.mediaDevices.getUserMedia({ audio: true, video: true });\n          _this.mediaDevicesInfos = yield _this.agoraService.getDevices(); //await navigator.mediaDevices.enumerateDevices();\n        } catch (error) {\n          console.error(error);\n        } finally {\n          return _this.mediaDevicesInfos.filter(mdi => mdi.kind === kind);\n        }\n      })();\n    }\n\n    setSinkID(element, deviceId) {\n      return _asyncToGenerator(function* () {\n        try {\n          yield element.setSinkId(deviceId);\n        } catch (error) {\n          console.error(error);\n        }\n      })();\n    }\n\n    getMediaStream(type, videoWidth, videoHeight, videoDeviceId, audioDeviceId) {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        const constraints = {\n          audio: false,\n          video: false\n        };\n\n        if (type === MediaStreamType.audio || type === MediaStreamType.all) {\n          constraints.audio = true;\n\n          if (audioDeviceId) {\n            constraints.audio = {\n              deviceId: audioDeviceId\n            };\n          }\n        }\n\n        if (type === MediaStreamType.video || type === MediaStreamType.all) {\n          constraints.video = true;\n\n          if (videoHeight && videoWidth || videoDeviceId) {\n            constraints.video = {\n              width: videoWidth,\n              height: videoHeight,\n              deviceId: videoDeviceId\n            };\n          }\n        }\n\n        try {\n          _this2.lastStream = yield navigator.mediaDevices.getUserMedia(constraints);\n        } catch (error) {\n          console.error(error);\n        } finally {\n          return _this2.lastStream;\n        }\n      })();\n    }\n\n  }\n\n  MediaService.ɵfac = function MediaService_Factory(t) {\n    return new (t || MediaService)(i0.ɵɵinject(i1.NgxAgoraSdkNgService));\n  };\n\n  MediaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MediaService,\n    factory: MediaService.ɵfac,\n    providedIn: 'root'\n  });\n  return MediaService;\n})();","map":null,"metadata":{},"sourceType":"module"}