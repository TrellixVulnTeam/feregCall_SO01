import { __awaiter } from "tslib";
import AgoraRTC from "agora-rtc-sdk-ng";
import { VideoTrack } from "./video-track";
export class JoinVideoChannel {
    constructor(client, config, channelName, token, uid) {
        this.client = client;
        this.config = config;
        this.channelName = channelName;
        this.token = token;
        this.uid = uid;
    }
    WithMediaStream(mediaStream) {
        this.localVideoTrack = AgoraRTC.createCustomVideoTrack({ mediaStreamTrack: mediaStream });
        return this;
    }
    WithCamera(cameraId) {
        this.requestInWait = AgoraRTC.createCameraVideoTrack({ cameraId: cameraId });
        return this;
    }
    Apply() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.client.join(this.config.AppID, this.channelName, this.token, this.uid);
            let localTrack;
            if (this.requestInWait) {
                localTrack = yield this.requestInWait;
            }
            else if (this.localVideoTrack) {
                localTrack = this.localVideoTrack;
            }
            else {
                localTrack = yield AgoraRTC.createCameraVideoTrack();
            }
            yield this.client.publish(localTrack);
            let videTrack = new VideoTrack(localTrack);
            return new Promise((resolve, reject) => {
                resolve(videTrack);
                reject();
            });
        });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiam9pbi12aWRlby1jaGFubmVsLmpzIiwic291cmNlUm9vdCI6Ii4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1hZ29yYS1zZGstbmcvc3JjLyIsInNvdXJjZXMiOlsibGliL3NlcnZpY2VzL2pvaW4tdmlkZW8tY2hhbm5lbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxRQUF5RixNQUFNLGtCQUFrQixDQUFDO0FBR3pILE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0MsTUFBTSxPQUFPLGdCQUFnQjtJQUl6QixZQUNXLE1BQXVCLEVBQ3ZCLE1BQW1CLEVBQ25CLFdBQW1CLEVBQ25CLEtBQWEsRUFDYixHQUFZO1FBSlosV0FBTSxHQUFOLE1BQU0sQ0FBaUI7UUFDdkIsV0FBTSxHQUFOLE1BQU0sQ0FBYTtRQUNuQixnQkFBVyxHQUFYLFdBQVcsQ0FBUTtRQUNuQixVQUFLLEdBQUwsS0FBSyxDQUFRO1FBQ2IsUUFBRyxHQUFILEdBQUcsQ0FBUztJQUNuQixDQUFDO0lBRUUsZUFBZSxDQUFDLFdBQTZCO1FBQ2hELElBQUksQ0FBQyxlQUFlLEdBQUcsUUFBUSxDQUFDLHNCQUFzQixDQUFDLEVBQUUsZ0JBQWdCLEVBQUUsV0FBVyxFQUFFLENBQUMsQ0FBQztRQUMxRixPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRU0sVUFBVSxDQUFDLFFBQWdCO1FBQzlCLElBQUksQ0FBQyxhQUFhLEdBQUcsUUFBUSxDQUFDLHNCQUFzQixDQUFDLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxDQUFDLENBQUM7UUFDN0UsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUVZLEtBQUs7O1lBR2QsTUFBTSxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBRWxGLElBQUksVUFBZSxDQUFDO1lBQ3BCLElBQUksSUFBSSxDQUFDLGFBQWEsRUFBRTtnQkFBRSxVQUFVLEdBQUcsTUFBTSxJQUFJLENBQUMsYUFBYSxDQUFDO2FBQUU7aUJBQzdELElBQUksSUFBSSxDQUFDLGVBQWUsRUFBRTtnQkFBRSxVQUFVLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQzthQUFFO2lCQUNoRTtnQkFBRSxVQUFVLEdBQUcsTUFBTSxRQUFRLENBQUMsc0JBQXNCLEVBQUUsQ0FBQzthQUFFO1lBRTlELE1BQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7WUFFdEMsSUFBSSxTQUFTLEdBQUcsSUFBSSxVQUFVLENBQUMsVUFBVSxDQUFDLENBQUM7WUFFM0MsT0FBTyxJQUFJLE9BQU8sQ0FBYyxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsRUFBRTtnQkFDaEQsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO2dCQUNuQixNQUFNLEVBQUUsQ0FBQztZQUNiLENBQUMsQ0FBQyxDQUFDO1FBRVAsQ0FBQztLQUFBO0NBRUoiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQWdvcmFSVEMsIHsgSUFnb3JhUlRDQ2xpZW50LCBJQ2FtZXJhVmlkZW9UcmFjaywgSUxvY2FsVmlkZW9UcmFjaywgSU1pY3JvcGhvbmVBdWRpb1RyYWNrIH0gZnJvbSBcImFnb3JhLXJ0Yy1zZGstbmdcIjtcbmltcG9ydCB7IEFnb3JhQ29uZmlnIH0gZnJvbSBcIi4uL2Fnb3JhLWNvbmZpZ1wiO1xuaW1wb3J0IHsgSVZpZGVvVHJhY2ssIElKb2luQ2hhbm5lbCwgSUpvaW5DaGFubmVsQXBwbHksIElWaWRlb0pvaW5DaGFubmVsIH0gZnJvbSBcIi4uL2NvcmUvaW50ZXJmYWNlc1wiO1xuaW1wb3J0IHsgVmlkZW9UcmFjayB9IGZyb20gXCIuL3ZpZGVvLXRyYWNrXCI7XG5cbmV4cG9ydCBjbGFzcyBKb2luVmlkZW9DaGFubmVsIGltcGxlbWVudHMgSVZpZGVvSm9pbkNoYW5uZWw8SVZpZGVvVHJhY2s+e1xuICAgIHByaXZhdGUgbG9jYWxWaWRlb1RyYWNrICE6IElMb2NhbFZpZGVvVHJhY2s7XG4gICAgcHJpdmF0ZSByZXF1ZXN0SW5XYWl0ITogUHJvbWlzZTxJTG9jYWxWaWRlb1RyYWNrPjtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwdWJsaWMgY2xpZW50OiBJQWdvcmFSVENDbGllbnQsXG4gICAgICAgIHB1YmxpYyBjb25maWc6IEFnb3JhQ29uZmlnLFxuICAgICAgICBwdWJsaWMgY2hhbm5lbE5hbWU6IHN0cmluZyxcbiAgICAgICAgcHVibGljIHRva2VuOiBzdHJpbmcsXG4gICAgICAgIHB1YmxpYyB1aWQ/OiBzdHJpbmdcbiAgICApIHsgfVxuXG4gICAgcHVibGljIFdpdGhNZWRpYVN0cmVhbShtZWRpYVN0cmVhbTogTWVkaWFTdHJlYW1UcmFjayk6IElKb2luQ2hhbm5lbEFwcGx5PElWaWRlb1RyYWNrPiB7XG4gICAgICAgIHRoaXMubG9jYWxWaWRlb1RyYWNrID0gQWdvcmFSVEMuY3JlYXRlQ3VzdG9tVmlkZW9UcmFjayh7IG1lZGlhU3RyZWFtVHJhY2s6IG1lZGlhU3RyZWFtIH0pO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICBwdWJsaWMgV2l0aENhbWVyYShjYW1lcmFJZDogc3RyaW5nKTogSUpvaW5DaGFubmVsQXBwbHk8SVZpZGVvVHJhY2s+IHtcbiAgICAgICAgdGhpcy5yZXF1ZXN0SW5XYWl0ID0gQWdvcmFSVEMuY3JlYXRlQ2FtZXJhVmlkZW9UcmFjayh7IGNhbWVyYUlkOiBjYW1lcmFJZCB9KTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgcHVibGljIGFzeW5jIEFwcGx5KCk6IFByb21pc2U8SVZpZGVvVHJhY2s+IHtcblxuICAgICAgICBcbiAgICAgICAgYXdhaXQgdGhpcy5jbGllbnQuam9pbih0aGlzLmNvbmZpZy5BcHBJRCwgdGhpcy5jaGFubmVsTmFtZSwgdGhpcy50b2tlbiwgdGhpcy51aWQpO1xuXG4gICAgICAgIGxldCBsb2NhbFRyYWNrOiBhbnk7XG4gICAgICAgIGlmICh0aGlzLnJlcXVlc3RJbldhaXQpIHsgbG9jYWxUcmFjayA9IGF3YWl0IHRoaXMucmVxdWVzdEluV2FpdDsgfVxuICAgICAgICBlbHNlIGlmICh0aGlzLmxvY2FsVmlkZW9UcmFjaykgeyBsb2NhbFRyYWNrID0gdGhpcy5sb2NhbFZpZGVvVHJhY2s7IH1cbiAgICAgICAgZWxzZSB7IGxvY2FsVHJhY2sgPSBhd2FpdCBBZ29yYVJUQy5jcmVhdGVDYW1lcmFWaWRlb1RyYWNrKCk7IH1cblxuICAgICAgICBhd2FpdCB0aGlzLmNsaWVudC5wdWJsaXNoKGxvY2FsVHJhY2spO1xuXG4gICAgICAgIGxldCB2aWRlVHJhY2sgPSBuZXcgVmlkZW9UcmFjayhsb2NhbFRyYWNrKTtcblxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2U8SVZpZGVvVHJhY2s+KChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIHJlc29sdmUodmlkZVRyYWNrKTtcbiAgICAgICAgICAgIHJlamVjdCgpO1xuICAgICAgICB9KTtcblxuICAgIH1cblxufSJdfQ==