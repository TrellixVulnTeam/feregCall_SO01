{"version":3,"file":"ngx-agora-sdk-ng.js","sources":["../../projects/ngx-agora-sdk-ng/src/lib/services/audio-track.ts","../../projects/ngx-agora-sdk-ng/src/lib/services/join-audio-channel.ts","../../projects/ngx-agora-sdk-ng/src/lib/services/media-track.ts","../../projects/ngx-agora-sdk-ng/src/lib/services/join-channel.ts","../../projects/ngx-agora-sdk-ng/src/lib/services/video-track.ts","../../projects/ngx-agora-sdk-ng/src/lib/services/join-video-channel.ts","../../../projects/ngx-agora-sdk-ng/src/lib/agora-config.ts","../../../projects/ngx-agora-sdk-ng/src/lib/ngx-agora-sdk-ng.service.ts","../../../projects/ngx-agora-sdk-ng/src/lib/ngx-agora-sdk-ng.component.ts","../../../projects/ngx-agora-sdk-ng/src/lib/ngx-agora-sdk-ng.module.ts","../../../projects/ngx-agora-sdk-ng/src/lib/types.ts","../../../../projects/ngx-agora-sdk-ng/src/public-api.ts","../../../../projects/ngx-agora-sdk-ng/src/ngx-agora-sdk-ng.ts"],"sourcesContent":["import { IMicrophoneAudioTrack } from \"agora-rtc-sdk-ng\";\nimport { IAudioTrack } from \"../core/audio-track\";\n\nexport class AudioTrack implements IAudioTrack {\n\n    private _microphoneAudioTrack: IMicrophoneAudioTrack;\n\n    constructor(private microphoneAudioTrack: IMicrophoneAudioTrack) {\n        this._microphoneAudioTrack = this.microphoneAudioTrack;\n    }\n\n\n    public stop(): void {\n       this._microphoneAudioTrack.stop();\n       this._microphoneAudioTrack.close();\n    }\n\n    public microphoneMute(): void {\n        this._microphoneAudioTrack.setEnabled(false);\n    }\n\n    public microphoneUnMute(): void {\n        this._microphoneAudioTrack.setEnabled(true);\n    }\n\n    public setVolume(volume: number): void {\n        this._microphoneAudioTrack.setVolume(volume);\n    }\n\n}","import AgoraRTC, { IAgoraRTCClient, ICameraVideoTrack, ILocalAudioTrack, IMicrophoneAudioTrack } from \"agora-rtc-sdk-ng\";\nimport { AgoraConfig } from \"../agora-config\";\nimport { IJoinChannel, IJoinChannelApply, IAudioTrack, IAudioJoinChannel } from \"../core/interfaces\";\nimport { AudioTrack } from \"./audio-track\";\n\nexport class JoinAudioChannel implements IAudioJoinChannel<IAudioTrack>{\n\n    private localAudioTrack !: ILocalAudioTrack;\n    private requestInWait!: Promise<IMicrophoneAudioTrack>;\n\n    constructor(\n        public client: IAgoraRTCClient,\n        public config: AgoraConfig,\n        public channelName: string,\n        public token: string,\n        public uid?: string\n    ) { }\n\n    public WithMediaStream(audioMediaStream: MediaStreamTrack): IJoinChannelApply<IAudioTrack> {\n        this.localAudioTrack = AgoraRTC.createCustomAudioTrack({ mediaStreamTrack: audioMediaStream });\n        return this;\n    }\n\n    public WithMicrophone(microphoneId: string): IJoinChannelApply<IAudioTrack> {\n        this.requestInWait = AgoraRTC.createMicrophoneAudioTrack({ microphoneId: microphoneId });\n        return this;\n    }\n\n    public async Apply(): Promise<IAudioTrack> {\n\n        await this.client.join(this.config.AppID, this.channelName, this.token, this.uid);\n\n        let localTrack: any;\n\n        if (this.requestInWait) { localTrack = await this.requestInWait; }\n        else if (this.localAudioTrack) { localTrack = this.localAudioTrack; }\n        else { localTrack = await AgoraRTC.createMicrophoneAudioTrack(); }\n\n        await this.client.publish([localTrack]);\n\n        let audioTrack = new AudioTrack(localTrack);\n\n        return new Promise<IAudioTrack>((resolve, reject) => {\n            resolve(audioTrack);\n            reject();\n        });\n\n    }\n\n}\n","import { ICameraVideoTrack, IMicrophoneAudioTrack } from \"agora-rtc-sdk-ng\";\nimport { IMediaTrack } from \"../core/media-track\";\nimport { VideoPlayerConfig } from \"../types\";\n\nexport class MediaTrack implements IMediaTrack {\n\n    private _cameraVideoTrack!: ICameraVideoTrack;\n    private _microphoneAudioTrack: IMicrophoneAudioTrack;\n\n    constructor(private track: [IMicrophoneAudioTrack, ICameraVideoTrack]) {\n         this._microphoneAudioTrack = this.track[0];\n        this._cameraVideoTrack = this.track[1];\n       \n    }\n\n    public stop(): void {\n      this._cameraVideoTrack.stop();\n      this._cameraVideoTrack.close();\n      this._microphoneAudioTrack.stop();\n      this._microphoneAudioTrack.close();\n    }\n\n\n    public playVideo(element: string | HTMLElement, config?: VideoPlayerConfig): void {\n        this._cameraVideoTrack.play(element, config);\n    }\n\n    public microphoneMute(): void {\n        this._microphoneAudioTrack.setEnabled(false);\n    }\n\n    public microphoneUnMute(): void {\n        this._microphoneAudioTrack.setEnabled(true);\n    }\n\n    public cameraOff(): void {\n        this._cameraVideoTrack.setEnabled(false);\n    }\n\n    public cameraOn(): void {\n        this._cameraVideoTrack.setEnabled(true);\n    }\n\n    public setVolume(volume: number): void {\n        this._microphoneAudioTrack.setVolume(volume);\n    }\n\n}","import { EventEmitter } from \"@angular/core\";\nimport AgoraRTC, { IAgoraRTCClient, ICameraVideoTrack, ILocalAudioTrack, ILocalVideoTrack, IMicrophoneAudioTrack } from \"agora-rtc-sdk-ng\";\nimport { AgoraConfig } from \"../agora-config\";\nimport { IJoinChannel, IJoinChannelApply, IMediaTrack } from \"../core/interfaces\";\nimport { IRemoteUser } from \"../types\";\nimport { MediaTrack } from \"./media-track\";\n\nexport class JoinChannel implements IJoinChannel<IMediaTrack> {\n\n    private localVideoTrack!: ILocalVideoTrack;\n    private requestInWait!: Promise<[IMicrophoneAudioTrack, ICameraVideoTrack]>;\n    private tracks: Array<any> = new Array<any>();\n\n    constructor(\n        public client: IAgoraRTCClient,\n        public config: AgoraConfig,\n        public channelName: string,\n        public token: string,\n        public uid?: string,\n\n    ) { }\n\n    public async Apply(): Promise<IMediaTrack> {\n\n        \n\n        await this.client.join(this.config.AppID, this.channelName, this.token, this.uid);\n\n        let localTrack: any;\n\n        if (this.requestInWait) { localTrack = await this.requestInWait; }\n        else if (this.tracks.length > 0) { localTrack = this.tracks; }\n        else { localTrack = await AgoraRTC.createMicrophoneAndCameraTracks(); }\n\n        await this.client.publish(localTrack);\n\n        let mediaTrack = new MediaTrack(localTrack);\n\n        this._onLocalUserJoinedEvent.emit({ track: mediaTrack });\n\n        return new Promise<IMediaTrack>((resolve, reject) => {\n            resolve(mediaTrack);\n            reject();\n        });\n\n    }\n\n\n    public WithMediaStream(videoMediaStream: MediaStreamTrack, audioMediaStream: MediaStreamTrack): IJoinChannelApply<IMediaTrack> {\n        this.tracks.push(AgoraRTC.createCustomAudioTrack({ mediaStreamTrack: audioMediaStream }));\n        this.tracks.push(AgoraRTC.createCustomVideoTrack({ mediaStreamTrack: videoMediaStream }));\n        return this;\n    }\n\n\n    public WithCameraAndMicrophone(microphoneId: string, cameraId: string): IJoinChannelApply<IMediaTrack> {\n\n        this.requestInWait = AgoraRTC.createMicrophoneAndCameraTracks(\n            { microphoneId: microphoneId },\n            { cameraId: cameraId }\n        );\n\n\n        return this;\n    }\n\n\n    public registerUserJoinedEvent(event: EventEmitter<{ track: IMediaTrack }>) {\n        this._onLocalUserJoinedEvent = event;\n    }\n\n    private _onLocalUserJoinedEvent: EventEmitter<{ track: IMediaTrack }> = new EventEmitter();\n\n}\n","import { ICameraVideoTrack } from \"agora-rtc-sdk-ng\";\nimport { IVideoTrack } from \"../core/video-track\";\nimport { VideoPlayerConfig } from \"../types\";\n\nexport class VideoTrack implements IVideoTrack {\n\n    private _cameraVideoTrack: ICameraVideoTrack;\n\n    constructor(private cameraVideoTrack: ICameraVideoTrack) {\n        this._cameraVideoTrack = this.cameraVideoTrack;\n    }\n\n   \n    public stop(): void {\n       this._cameraVideoTrack.stop();\n       this._cameraVideoTrack.close();\n    }\n\n    public playVideo(element: string | HTMLElement, config?: VideoPlayerConfig): void {\n        this._cameraVideoTrack.play(element, config);\n    }\n\n    public cameraOff(): void {\n        this._cameraVideoTrack.setEnabled(false);\n    }\n\n    public cameraOn(): void {\n        this._cameraVideoTrack.setEnabled(true);\n    }\n\n}","import AgoraRTC, { IAgoraRTCClient, ICameraVideoTrack, ILocalVideoTrack, IMicrophoneAudioTrack } from \"agora-rtc-sdk-ng\";\nimport { AgoraConfig } from \"../agora-config\";\nimport { IVideoTrack, IJoinChannel, IJoinChannelApply, IVideoJoinChannel } from \"../core/interfaces\";\nimport { VideoTrack } from \"./video-track\";\n\nexport class JoinVideoChannel implements IVideoJoinChannel<IVideoTrack>{\n    private localVideoTrack !: ILocalVideoTrack;\n    private requestInWait!: Promise<ILocalVideoTrack>;\n\n    constructor(\n        public client: IAgoraRTCClient,\n        public config: AgoraConfig,\n        public channelName: string,\n        public token: string,\n        public uid?: string\n    ) { }\n\n    public WithMediaStream(mediaStream: MediaStreamTrack): IJoinChannelApply<IVideoTrack> {\n        this.localVideoTrack = AgoraRTC.createCustomVideoTrack({ mediaStreamTrack: mediaStream });\n        return this;\n    }\n\n    public WithCamera(cameraId: string): IJoinChannelApply<IVideoTrack> {\n        this.requestInWait = AgoraRTC.createCameraVideoTrack({ cameraId: cameraId });\n        return this;\n    }\n\n    public async Apply(): Promise<IVideoTrack> {\n\n        \n        await this.client.join(this.config.AppID, this.channelName, this.token, this.uid);\n\n        let localTrack: any;\n        if (this.requestInWait) { localTrack = await this.requestInWait; }\n        else if (this.localVideoTrack) { localTrack = this.localVideoTrack; }\n        else { localTrack = await AgoraRTC.createCameraVideoTrack(); }\n\n        await this.client.publish(localTrack);\n\n        let videTrack = new VideoTrack(localTrack);\n\n        return new Promise<IVideoTrack>((resolve, reject) => {\n            resolve(videTrack);\n            reject();\n        });\n\n    }\n\n}","import {\n    ClientRole, CODEC,\n    IRemoteAudioTrack,\n    IRemoteVideoTrack,\n    MODE\n} from './types';\n\nexport class AgoraConfig {\n    AppID!: string;\n    Video?: { codec: CODEC; mode: MODE; role: ClientRole; };\n}\n  \nexport interface IChannelClient {\n    joinVideo(channel: string, token: string | null, uid?: string | number | null): Promise<IRemoteVideoTrack>;\n    joinVoice(channel: string, token: string | null, uid?: string | number | null): Promise<IRemoteAudioTrack>;\n    leaveVideo(): Promise<any>;\n}","import { EventEmitter, Inject, Injectable } from \"@angular/core\";\nimport AgoraRTC, { IAgoraRTCClient } from \"agora-rtc-sdk-ng\";\nimport { Observable } from \"rxjs\";\nimport { JoinAudioChannel, JoinChannel, JoinVideoChannel } from \"./services/channel\";\nimport { AgoraConfig } from \"./agora-config\";\n\nimport {\n    IAudioTrack,\n    INgxAgoraSdkNgService,\n    IJoinChannel,\n    IMediaTrack,\n    IVideoTrack,\n    IVideoJoinChannel,\n    IAudioJoinChannel\n} from \"./core/interfaces\";\n\nimport { IRemoteUser, NetworkQuality, UserState } from \"./types\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NgxAgoraSdkNgService implements INgxAgoraSdkNgService {\n\n    private agoraClient!: IAgoraRTCClient;\n\n    constructor(@Inject('config') private config: AgoraConfig) {\n\n        this.agoraClient = AgoraRTC.createClient({\n            codec: config.Video ? config.Video?.codec : 'h264',\n            mode: config.Video ? config.Video?.mode : 'rtc',\n            role: config.Video ? config.Video?.role : 'audience'\n        });\n\n        this.agoraClient.on('user-published', async (user, mediaType) => {\n            await this.agoraClient.subscribe(user, mediaType);\n\n            this._onRemoteUserStateEvent.emit({\n                mediaType: mediaType,\n                connectionState: 'CONNECTED',\n                user: {\n                    uid: user.uid,\n                    hasVideo: user.hasVideo,\n                    hasAudio: user.hasAudio,\n                    audioTrack: {\n                        setVolume: (volume) => user.audioTrack?.setVolume(volume),\n                        getVolumeLevel: () => <number>user.audioTrack?.getVolumeLevel(),\n                        play: () => user.audioTrack?.play(),\n                        getMediaStream: () => new MediaStream([<MediaStreamTrack>user.audioTrack?.getMediaStreamTrack()])\n                    },\n                    videoTrack: {\n                        play: (element) => user.videoTrack?.play(element),\n                        getMediaStream: () => new MediaStream([<MediaStreamTrack>user.videoTrack?.getMediaStreamTrack()])\n                    }\n                }\n            });\n        });\n\n        this.agoraClient.on('user-unpublished', user => {\n            this._onRemoteUserStateEvent.emit({\n                connectionState: 'DISCONNECTED', user: {\n                    uid: user.uid,\n                    hasVideo: user.hasVideo,\n                    hasAudio: user.hasAudio,\n                    audioTrack: {\n                        setVolume: (volume) => user.audioTrack?.setVolume(volume),\n                        getVolumeLevel: () => <number>user.audioTrack?.getVolumeLevel(),\n                        play: () => user.audioTrack?.play(),\n                        getMediaStream: () => new MediaStream([<MediaStreamTrack>user.audioTrack?.getMediaStreamTrack()])\n                    },\n                    videoTrack: {\n                        play: (element) => user.videoTrack?.play(element),\n                        getMediaStream: () => new MediaStream([<MediaStreamTrack>user.videoTrack?.getMediaStreamTrack()])\n                    }\n                }\n            });\n        });\n\n        this.agoraClient.on('user-joined', (user) => {\n            this._onRemoteUserJoinedEvent.emit({\n                uid: user.uid,\n                hasVideo: user.hasVideo,\n                hasAudio: user.hasAudio,\n                audioTrack: {\n                    setVolume: (volume) => user.audioTrack?.setVolume(volume),\n                    getVolumeLevel: () => <number>user.audioTrack?.getVolumeLevel(),\n                    play: () => user.audioTrack?.play(),\n                    getMediaStream: () => new MediaStream([<MediaStreamTrack>user.audioTrack?.getMediaStreamTrack()])\n                },\n                videoTrack: {\n                    play: (element) => user.videoTrack?.play(element),\n                    getMediaStream: () => new MediaStream([<MediaStreamTrack>user.videoTrack?.getMediaStreamTrack()])\n                }\n            });\n        });\n\n        this.agoraClient.on('user-left', (user, reason) => {\n            this._onRemoteUserLeftEvent.emit({\n                user: {\n                    uid: user.uid,\n                    hasVideo: user.hasVideo,\n                    hasAudio: user.hasAudio,\n                    audioTrack: {\n                        setVolume: (volume) => user.audioTrack?.setVolume(volume),\n                        getVolumeLevel: () => <number>user.audioTrack?.getVolumeLevel(),\n                        play: () => user.audioTrack?.play(),\n                        getMediaStream: () => new MediaStream([<MediaStreamTrack>user.audioTrack?.getMediaStreamTrack()])\n                    },\n                    videoTrack: {\n                        play: (element) => user.videoTrack?.play(element),\n                        getMediaStream: () => new MediaStream([<MediaStreamTrack>user.videoTrack?.getMediaStreamTrack()])\n                    }\n                },\n                reason: reason\n            });\n        });\n\n        this.agoraClient.enableAudioVolumeIndicator();\n        this.agoraClient.on('volume-indicator', (result) => {\n            this._onRemoteVolumeIndicatorEvent.emit(result);\n        });\n\n        this.agoraClient.on('network-quality', (stats) => {\n            this._onLocalNetworkQualityChangeEvent.emit({\n                download: stats.downlinkNetworkQuality,\n                upload: stats.uplinkNetworkQuality\n            });\n        })\n\n    }\n\n    public join(channelName: string, token: string, uid?: string): IJoinChannel<IMediaTrack> {\n        let joinChannel = new JoinChannel(this.agoraClient, this.config, channelName, token, uid);\n        joinChannel.registerUserJoinedEvent(this._onLocalUserJoinedEvent);\n        return joinChannel;\n    }\n\n    public joinVideo(channelName: string, token: string, uid?: string): IVideoJoinChannel<IVideoTrack> {\n        return new JoinVideoChannel(this.agoraClient, this.config, channelName, token, uid);\n    }\n\n    public joinAudio(channelName: string, token: string, uid?: string): IAudioJoinChannel<IAudioTrack> {\n        return new JoinAudioChannel(this.agoraClient, this.config, channelName, token, uid);\n    }\n\n    // remark: review this code.\n    public async leave(): Promise<any> {\n        await this.agoraClient.leave();\n        this._onLocalUserLeftEvent.emit();\n    }\n\n    public getCameras(): Promise<MediaDeviceInfo[]> {\n        return AgoraRTC.getCameras();\n    }\n\n    public getMicrophones(): Promise<MediaDeviceInfo[]> {\n        return AgoraRTC.getMicrophones();\n    }\n\n    public getDevices(): Promise<MediaDeviceInfo[]> {\n        return AgoraRTC.getDevices();\n    }\n\n    public onRemoteUsersStatusChange(): Observable<UserState> {\n        return this._onRemoteUserStateEvent.asObservable();\n    }\n\n    public onRemoteUserJoined(): Observable<IRemoteUser> {\n        return this._onRemoteUserJoinedEvent.asObservable();\n    }\n\n    public onRemoteUserLeft(): Observable<{ user: IRemoteUser, reason: string }> {\n        return this._onRemoteUserLeftEvent.asObservable();\n    }\n\n    public onRemoteVolumeIndicator(): Observable<Array<{ level: number, uid: number | string }>> {\n        return this._onRemoteVolumeIndicatorEvent.asObservable();\n    }\n\n\n    public onLocalUserJoined(): Observable<{ track: IMediaTrack }> {\n        return this._onLocalUserJoinedEvent.asObservable();\n    }\n\n    public onLocalUserLeft(): Observable<{ user: IRemoteUser, reason: string }> {\n        return this._onLocalUserLeftEvent.asObservable();\n    }\n\n    public onLocalNetworkQualityChange(): Observable<any> {\n        return this._onLocalNetworkQualityChangeEvent.asObservable();\n    }\n\n    private _onRemoteUserStateEvent: EventEmitter<UserState> = new EventEmitter();\n    private _onRemoteUserJoinedEvent: EventEmitter<IRemoteUser> = new EventEmitter();\n    private _onRemoteUserLeftEvent: EventEmitter<{ user: IRemoteUser, reason: string }> = new EventEmitter();\n    private _onRemoteVolumeIndicatorEvent: EventEmitter<Array<{ level: number, uid: number | string }>> = new EventEmitter();\n    private _onLocalUserJoinedEvent: EventEmitter<{ track: IMediaTrack }> = new EventEmitter();\n    private _onLocalUserLeftEvent: EventEmitter<any> = new EventEmitter();\n    private _onLocalNetworkQualityChangeEvent: EventEmitter<NetworkQuality> = new EventEmitter();\n\n}  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-agora-sdk-ng',\n  template: `\n    <p>\n      ngx-agora-sdk-ng works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class NgxAgoraSdkNgComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { AgoraConfig } from './agora-config';\nimport { NgxAgoraSdkNgComponent } from './ngx-agora-sdk-ng.component';\nimport { NgxAgoraSdkNgService } from './ngx-agora-sdk-ng.service';\n\n@NgModule({\n  declarations: [NgxAgoraSdkNgComponent],\n  imports: [],\n  exports: [NgxAgoraSdkNgComponent]\n})\nexport class NgxAgoraSdkNgModule {\n\n\n  static forRoot(config: AgoraConfig): ModuleWithProviders<NgxAgoraSdkNgModule> {\n    return {\n      ngModule: NgxAgoraSdkNgModule,\n      providers: [NgxAgoraSdkNgService, { provide: 'config', useValue: config }]\n    };\n  }\n\n\n }\n","export declare type CODEC = \"h264\" | \"vp8\";\nexport declare type MODE = \"live\" | \"rtc\";\nexport declare type ClientRole = \"audience\" | \"host\";\nexport declare type MediaType = \"video\" | \"audio\";\nexport declare type ConnectionState = \"DISCONNECTED\" | \"CONNECTING\" | \"RECONNECTING\" | \"CONNECTED\" | \"DISCONNECTING\";\n\n\nexport class UserState {\n    public connectionState!: ConnectionState;\n    public mediaType?: MediaType;\n    public user!: IRemoteUser\n}\n\nexport declare interface IRemoteUser {\n    uid: number | string;\n    audioTrack?: IRemoteAudioTrack;\n    videoTrack?: IRemoteVideoTrack;\n    hasAudio: boolean;\n    hasVideo: boolean;\n}\n\nexport declare interface IRemoteVideoTrack {\n    play(element: string | HTMLElement, config?: VideoPlayerConfig): void;\n    getMediaStream(): MediaStream;\n}\n\nexport declare interface IRemoteAudioTrack {\n    play(): void;\n    setVolume(volume: number): void;\n    getVolumeLevel(): number;\n    getMediaStream(): MediaStream;\n}\n\n\nexport declare interface VideoPlayerConfig {\n    mirror?: boolean;\n    fit?: \"cover\" | \"contain\" | \"fill\";\n}\n\n\nexport class IChannelConfig {\n    token!: string;\n    name!: string;\n    uid?: number;\n}\n\n\nexport declare interface NetworkQuality {\n    /**\n    * - 0: The quality is unknown.\n    * - 1: The quality is excellent.\n    * - 2: The quality is good, but the bitrate is less than optimal.\n    * - 3: Users experience slightly impaired communication.\n    * - 4: Users can communicate with each other, but not very smoothly.\n    * - 5: The quality is so poor that users can barely communicate.\n    * - 6: The network is disconnected and users cannot communicate.\n    */\n    upload: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n    /**\n    * - 0: The quality is unknown.\n    * - 1: The quality is excellent.\n    * - 2: The quality is good, but the bitrate is less than optimal.\n    * - 3: Users experience slightly impaired communication.\n    * - 4: Users can communicate with each other, but not very smoothly.\n    * - 5: The quality is so poor that users can barely communicate.\n    * - 6: The network is disconnected and users cannot communicate.\n    */\n    download: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n}\n\n","/*\n * Public API Surface of ngx-agora-sdk-ng\n */\n\nexport * from './lib/ngx-agora-sdk-ng.service';\nexport * from './lib/core/interfaces';\nexport * from './lib/core';\n\nexport * from './lib/ngx-agora-sdk-ng.service';\nexport * from './lib/ngx-agora-sdk-ng.component';\nexport * from './lib/ngx-agora-sdk-ng.module';\nexport * from './lib/types';\nexport * from './lib/agora-config';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}